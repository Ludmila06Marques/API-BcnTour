generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  name     String
  country  String
  urlImage String
  createdAt   DateTime  @default(now())  @db.Date
  Publish  Publish[]
  Rate     Rate[]
  UserLocation  UserLocation[]

  @@map("users")
}

model Options {
  id       Int       @id @default(autoincrement())
  name     String
  urlImage String
  Publish  Publish[]

  @@map("options")
}

model Publish {
  id       Int     @id @default(autoincrement())
  coment   String
  urlImage String
  rateNote String
  localizationId Int
  userId   Int
  optionId Int
createdAt  DateTime  @default(now())  @db.Date

  localization  Localization @relation(fields: [localizationId], references: [id])
  option   Options @relation(fields: [optionId], references: [id])
  user     Users   @relation(fields: [userId], references: [id])
  Rate     Rate[]
 

  @@map("publish")
}

model Rate {
  id        Int     @id @default(autoincrement())
  userId    Int
  publishId Int
  note      Int


  publish   Publish @relation(fields: [publishId], references: [id])
  user      Users   @relation(fields: [userId], references: [id])

  @@map("rate")
}

model Localization {
  id        Int     @id @default(autoincrement())
  name     String
  latitude String
  longitude String

  
  Publish   Publish[]
  UserLocation  UserLocation[]

  @@map("localization")
}

model UserLocation {
  id        Int     @id @default(autoincrement())
  userId    Int
  localizationId Int
createdAt   DateTime  @default(now())  @db.Date
  localization  Localization @relation(fields: [localizationId], references: [id])
  user      Users   @relation(fields: [userId], references: [id])
  @@map("userLocation")
}
